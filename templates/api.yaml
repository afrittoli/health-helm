kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: {{ template "health.fullname" . }}-services-reader
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["services"]
  verbs: ["get"]
- apiGroups: [""] # "" indicates the core API group
  resources: ["secrets"]
  verbs: ["create"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "health.fullname" . }}-read-services
  namespace: default
subjects:
- kind: Group
  name: system:serviceaccounts
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: {{ template "health.fullname" . }}-services-reader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "health.fullname" . }}-api
  labels:
    app: {{ template "health.name" . }}-api
    chart: {{ template "health.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "health.name" . }}-api
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "health.name" . }}-api
        release: {{ .Release.Name }}
    spec:
      initContainers:
      - name: check-db-ready
        image: postgres:9.6.5
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          - name: POSTGRES_CONTAINER_NAME
            value: {{ template "health.fullname" . }}-postgres
        command: ['sh', '-c',
          'until pg_isready -h $POSTGRES_CONTAINER_NAME -p 5432;
          do echo waiting for database; sleep 2; done;']
      - name: {{ template "health.fullname" . }}-database
        image: {{ template "health.database.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["/root/run_db_migrations.sh"]
        env:
          - name: DB_SECRET_NAME
            value: {{ template "health.fullname" . }}-dbhost
          - name: POSTGRES_CONTAINER_NAME
            value: {{ template "health.fullname" . }}-postgres
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ template "health.fullname" . }}-dbsecrets
                key: username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "health.fullname" . }}-dbsecrets
                key: password
          - name: DB_NAME
            value: subunit2sql
      containers:
        - name: {{ template "health.fullname" . }}-api
          image: {{ template "health.api.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ template "health.fullname" . }}-dbhost
                  key: host
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ template "health.fullname" . }}-dbsecrets
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "health.fullname" . }}-dbsecrets
                  key: password
            - name: DB_NAME
              value: subunit2sql
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "health.fullname" . }}-api
  labels:
    app: {{ template "health.name" . }}-api
    chart: {{ template "health.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
    name: health
    protocol: TCP
  selector:
    app: {{ template "health.name" . }}-api
    release: {{ .Release.Name }}
