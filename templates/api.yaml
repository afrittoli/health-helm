kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ template "health.fullname" . }}-services-reader
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["services"]
  verbs: ["get"]
- apiGroups: [""] # "" indicates the core API group
  resources: ["secrets"]
  verbs: ["create"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "health.fullname" . }}-read-services
  namespace: {{ .Release.Namespace }}
subjects:
- kind: Group
  name: system:serviceaccounts
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: {{ template "health.fullname" . }}-services-reader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: serving.knative.dev/v1alpha1
kind: Service
metadata:
  name: {{ template "health.fullname" . }}-api
  labels:
    app: {{ template "health.name" . }}-api
    chart: {{ template "health.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  runLatest:
    configuration:
      revisionTemplate:  # template for building Revision
        spec:
          container: # k8s core.v1.Container
            image: {{ template "health.api.image" . }}
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            env:
              - name: DB_HOST
                value: {{ template "health.fullname" . }}-postgres
              - name: DB_USERNAME
                valueFrom:
                  secretKeyRef:
                    name: {{ template "health.fullname" . }}-dbsecrets
                    key: username
              - name: DB_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: {{ template "health.fullname" . }}-dbsecrets
                    key: password
              - name: DB_NAME
                value: subunit2sql
            ports:
              - name: h2c
                containerPort: 80
                protocol: TCP
            readinessProbe:
              httpGet:
                path: /status
              initialDelaySeconds: 5
              periodSeconds: 5
            livenessProbe:
              httpGet:
                path: /status
              initialDelaySeconds: 60
              periodSeconds: 20
