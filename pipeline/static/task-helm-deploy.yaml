apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: helm-deploy
spec:
  serviceAccount: health-helm
  volumes:
    - name: helm-extra-values
      configMap:
        name: helm-extra-values
  inputs:
    resources:
      - name: chart
        type: git
      - name: api-image
        type: image
      - name: frontend-image
        type: image
      - name: database-image
        type: image
      - name: target-cluster
        type: cluster
    params:
      - name: pathToHelmCharts
        description: Path to the helm charts within the repo
        default: .
      - name: clusterIngressHost
        description: Fully qualified hostname of the cluster ingress
      - name: targetNamespace
        description: Namespace in the target cluster we want to deploy to
        default: "default"
      - name: imageTag
        description: Tag of the images to be used.
        default: "default"
      - name: useKnative
        description: Deploy on k8s or Knative
        default: "true"
  steps:
    - name: helm-deploy
      image: alpine/helm
      command: ["/usr/bin/helm"]
      args: ["upgrade", "--debug", "--install",
             "--namespace=${inputs.params.targetNamespace}",
             "--force", "--recreate-pods",
             "health",
             "/workspace/chart/${inputs.params.pathToHelmCharts}",
             "--set", "overrideApiImage=${inputs.resources.api-image.url}:${inputs.params.imageTag}",
             "--set", "overrideFrontendImage=${inputs.resources.frontend-image.url}:${inputs.params.imageTag}",
             "--set", "overrideDatabaseImage=${inputs.resources.database-image.url}:${inputs.params.imageTag}",
             "--set", "ingress.enabled=true",
             "--set", "ingress.host=${inputs.params.clusterIngressHost}",
             "--set", "image.pullPolicy=Always",
             "--set", "knative.enabled=${inputs.params.useKnative}",
             "-f", "/values/helm-values.yaml"]
      volumeMounts:
        - name: helm-extra-values
          readOnly: true
          mountPath: /values/helm-values.yaml
          subPath: helm-values.yaml
      env:
        - name: "KUBECONFIG"
          value: "/workspace/${inputs.resources.target-cluster.name}/kubeconfig"
        - name: "TILLER_NAMESPACE"
          value: "${inputs.params.targetNamespace}"
